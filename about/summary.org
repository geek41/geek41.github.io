#+STARTUP:showall
#+TITLE:2014年度个人总结
#+AUTHOR:生产MIS-李松伟
#+DATE:<2015-01-07 三>
#+EMAIL:sylvan9527@gmail.com

* 关于JHOP平台快速开发

  因为MIS线的产品多基于JHOP开发，但是我觉得JHOP有很多问题需要完善，当然这都是个人建议，而且已经多次被‘少数服从多数‘打败。

** 何谓平台？
  开发平台=框架搭建?当然我对于平台的概念并不十分清楚，但是就目前来看，JHOP很像是框架搭建用以复用的一套脚手架程序。因为我也能用框架开源的框架搭起来一套，并不一定比这差太多，而且我之前也一直是这么做的。

** 耦合性&拓展性
*** 现状

	- 现在开发的模式是，一个新项目就从svn clone一个JHOP example程序，我无法选择不要那些功能，像一些jhop-core,jhop-shiro,jhop-mail等等组建统统被加进来，而且是jar包加载。这不像一个高复用性、低耦合的工厂，当然你可以说我可以在配置文件中删除这些配置和jar包，但是这么做太笨了，而且core里面有shiro的东西，这可能会造成依赖故障。
	 
   - 系统的大多数组件都是硬编码的,如果我想用spring security代替apache shiro 这非常困难。如果我想弃用jqgrid，这几乎不可能，因为它贯穿了整个系统的JSP页面，使得每个页面都有js脚本，难以维护不美观，甚至弹窗等功能也拓展自jqgrid，这真的很糟糕，人家就是做表格的，无法形容对此之烦感。
   - JHOP里面稀有的注释和JAR包的封装使得拓展变得非常困难，如果我想看JHOP-core里面某个类怎么实现的，需要去别的项目里找或者反编译JAR里面的class（这肯定没有注释了）,这样让一个新手在JHOP上开发变得困难重重啊。 
   - 就海运项目来说，用到了一套WEB前端框架virgo，里面加载了几个css,20个js脚本，加上本身JHOP的jqgrid,workflow等等，大约每个页面需要加载30多个脚本，7个样式，导致最终页面样式看起来很遭。就依赖关系很难将30个JS剔除大部分，而且没人知道这些JS是做什么的究竟有没有用。
   - 页面程序分离。想在有很多技术像sitemesh,ajax都可以使得加载部分请求，现在的程序都是全加载，真的很浪费资源。
   - 数据源的使用。我们有很多功能是要依赖oracle的存储过程，oracle提供的bi算法等。大体来说大多数公司都推荐用存储过程来完成业务逻辑的，这让开发变得难以维护，而且跨平台变得困难，我换成mysql就肯定无法跑起来了。
*** maven 的使用
	JHOP平台里面有maven技术，但是几乎没有使用到
**** jar包管理
	 JHOP开发程序的jar包并没有交给maven来管理，虽然我们有私服。合理的jar包管理使得一个程序源码以除了jar在内的更小的子集，也就是说我svn的迁出过程只要几M而已。这是最显而易见的好处，还有就是jar包升级，当然这个离我们比较远就不说了。
**** 打包和自动化测试
	目前的程序打包方式是eclipse exprot war,这很老土。离开了eclipse我们怎么打包呢，测试人员不装eclipse就没法打包了吗？为什么我们maven里面没有配置打包的细节，而且还有ant.xml，但是里面也没有打包的脚本。我觉得这个是最需要完善的，能节省很多时间和变得敏捷。
	最近公司也在谈自动化测试，但是我从任何人的身上没有了解到任何信息。我为了使自己的程序变得敏捷很早就研究过。maven打包的时候是会自动化测试的，当然前提是你要写了测试方法和你的测试覆盖率是多少。这里也引出一个概念TDD-测试驱动开发，这个简单讲是我在test包里面写测试接口，系统的具体业务来实现，最终用以所有测试接口测试通过来定义系统的完成情况，这是一个测试先行的敏捷开发流程，虽然用的人太少了，但是也会是未来的趋势，但也反映了没有扎实的编程功底做自动化测试是一件不靠普的事。

**** 项目生成
	 maven可以自定义原型（archetype),这样我们把每一类项目都分别打成一个原型，这样我们在特定的项目里只需要根据需要的原型来生成项目，降低耦合性

  
** 性能问题

   做传统行业开发，对性能，并发，大数据处理上面要求相对较低，但是我们不能不做重视。一套JHOP checkout，至少要1g的堆内存才能保证不溢出，这很怪，因为我们的项目真的没有庞大到这种状态。因为系统硬件，oracle的性能，使得我们的程序能够提升很高的效率水平，但是单位时间单位内存可以优化出很多资源的，当真的面临有限资源的庞大系统时JHOP将不足以支撑了。

** 安全性

   因为之前做过第三方测试，测前整个系统全线失败，到处是xss，cxfs等，当然这不是什么技术难题，需要完善到平台里面。目前海运项目的密码加密方式是rsa，我对此也有异议，虽然rsa基数大了很难被破解，但是如果攻破程序就可以通过密钥文件解密了，我还是觉得非可逆的比较好。

